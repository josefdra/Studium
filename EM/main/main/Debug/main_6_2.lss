
main_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000002c  00800100  00800100  0000036c  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000070  00000000  00000000  0000039c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000004c3  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000001d0  00000000  00000000  000008cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001d8  00000000  00000000  00000a9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000114  00000000  00000000  00000c78  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000021d  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000214  00000000  00000000  00000fa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000060  00000000  00000000  000011bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ac 32       	cpi	r26, 0x2C	; 44
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 16 01 	call	0x22c	; 0x22c <main>
  88:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <check_buttons_and_overflow>:
	var++;
	startTimer(0);
}

void check_buttons_and_overflow(){	
	if(~PINC & 0x01){
  90:	30 99       	sbic	0x06, 0	; 6
  92:	1d c0       	rjmp	.+58     	; 0xce <check_buttons_and_overflow+0x3e>
		cli();
  94:	f8 94       	cli
void startTimer(uint8_t t_n){
	timers[t_n].running = 1;
}

void cancelTimer(uint8_t t_n){
	timers[t_n].running = 0;
  96:	10 92 07 01 	sts	0x0107, r1
		cancelTimer(0);
		safe = (PIND & 0x03);
  9a:	89 b1       	in	r24, 0x09	; 9
  9c:	83 70       	andi	r24, 0x03	; 3
  9e:	80 93 2a 01 	sts	0x012A, r24
		safe |= ((PIND & 0x20) >> 3);
  a2:	29 b1       	in	r18, 0x09	; 9
  a4:	40 91 2a 01 	lds	r20, 0x012A
  a8:	20 72       	andi	r18, 0x20	; 32
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	c9 01       	movw	r24, r18
  ae:	95 95       	asr	r25
  b0:	87 95       	ror	r24
  b2:	95 95       	asr	r25
  b4:	87 95       	ror	r24
  b6:	95 95       	asr	r25
  b8:	87 95       	ror	r24
  ba:	84 2b       	or	r24, r20
  bc:	80 93 2a 01 	sts	0x012A, r24
		var = safe;
  c0:	80 91 2a 01 	lds	r24, 0x012A
  c4:	80 93 2b 01 	sts	0x012B, r24
		PORTB = 0x07;
  c8:	87 e0       	ldi	r24, 0x07	; 7
  ca:	85 b9       	out	0x05, r24	; 5
		sei();
  cc:	78 94       	sei
	}
	if(~PIND & 0x04){
  ce:	4a 99       	sbic	0x09, 2	; 9
  d0:	03 c0       	rjmp	.+6      	; 0xd8 <check_buttons_and_overflow+0x48>
	timers[t_n].counter = 0;
	timers[t_n].running = 0;
}

void startTimer(uint8_t t_n){
	timers[t_n].running = 1;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	80 93 07 01 	sts	0x0107, r24
void cancelTimer(uint8_t t_n){
	timers[t_n].running = 0;
}

int timerRunning(uint8_t t_n){
	return timers[t_n].running;
  d8:	80 91 07 01 	lds	r24, 0x0107
		startTimer(0);		
	}
	if (timerRunning(0) && var != var_old){		
  dc:	88 23       	and	r24, r24
  de:	e1 f0       	breq	.+56     	; 0x118 <check_buttons_and_overflow+0x88>
  e0:	90 91 2b 01 	lds	r25, 0x012B
  e4:	80 91 29 01 	lds	r24, 0x0129
  e8:	98 17       	cp	r25, r24
  ea:	b1 f0       	breq	.+44     	; 0x118 <check_buttons_and_overflow+0x88>
		helper &= 0xF8;
  ec:	80 91 28 01 	lds	r24, 0x0128
  f0:	88 7f       	andi	r24, 0xF8	; 248
  f2:	80 93 28 01 	sts	0x0128, r24
		helper |= var;
  f6:	80 91 28 01 	lds	r24, 0x0128
  fa:	90 91 2b 01 	lds	r25, 0x012B
  fe:	89 2b       	or	r24, r25
 100:	80 93 28 01 	sts	0x0128, r24
		PORTB = helper;
 104:	80 91 28 01 	lds	r24, 0x0128
 108:	85 b9       	out	0x05, r24	; 5
		helper = PORTB;
 10a:	85 b1       	in	r24, 0x05	; 5
 10c:	80 93 28 01 	sts	0x0128, r24
		var_old = var;		
 110:	80 91 2b 01 	lds	r24, 0x012B
 114:	80 93 29 01 	sts	0x0129, r24
	}
	if(var == 8){
 118:	80 91 2b 01 	lds	r24, 0x012B
 11c:	88 30       	cpi	r24, 0x08	; 8
 11e:	31 f4       	brne	.+12     	; 0x12c <check_buttons_and_overflow+0x9c>
		var, var_old = safe;
 120:	80 91 2b 01 	lds	r24, 0x012B
 124:	80 91 2a 01 	lds	r24, 0x012A
 128:	80 93 29 01 	sts	0x0129, r24
	timers[t_n].counter = 0;
	timers[t_n].running = 0;
}

void startTimer(uint8_t t_n){
	timers[t_n].running = 1;
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	80 93 0f 01 	sts	0x010F, r24
 132:	08 95       	ret

00000134 <change_var>:
volatile uint8_t var_old;
volatile uint8_t reset_is_pressed = 0;


void change_var(){
	var++;
 134:	80 91 2b 01 	lds	r24, 0x012B
 138:	8f 5f       	subi	r24, 0xFF	; 255
 13a:	80 93 2b 01 	sts	0x012B, r24
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	80 93 07 01 	sts	0x0107, r24
 144:	08 95       	ret

00000146 <__vector_13>:

int timerRunning(uint8_t t_n){
	return timers[t_n].running;
}

ISR(TIMER1_OVF_vect){
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	2f 93       	push	r18
 152:	3f 93       	push	r19
 154:	4f 93       	push	r20
 156:	5f 93       	push	r21
 158:	6f 93       	push	r22
 15a:	7f 93       	push	r23
 15c:	8f 93       	push	r24
 15e:	9f 93       	push	r25
 160:	af 93       	push	r26
 162:	bf 93       	push	r27
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	ef 93       	push	r30
 16a:	ff 93       	push	r31
	TCNT1 = 65285;
 16c:	85 e0       	ldi	r24, 0x05	; 5
 16e:	9f ef       	ldi	r25, 0xFF	; 255
 170:	90 93 85 00 	sts	0x0085, r25
 174:	80 93 84 00 	sts	0x0084, r24
	for(int i = 0; i < 5; i++){
 178:	c0 e0       	ldi	r28, 0x00	; 0
 17a:	d0 e0       	ldi	r29, 0x00	; 0
		if(timers[i].running == 1){
 17c:	fe 01       	movw	r30, r28
 17e:	ee 0f       	add	r30, r30
 180:	ff 1f       	adc	r31, r31
 182:	ee 0f       	add	r30, r30
 184:	ff 1f       	adc	r31, r31
 186:	ee 0f       	add	r30, r30
 188:	ff 1f       	adc	r31, r31
 18a:	e0 50       	subi	r30, 0x00	; 0
 18c:	ff 4f       	sbci	r31, 0xFF	; 255
 18e:	87 81       	ldd	r24, Z+7	; 0x07
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	a1 f5       	brne	.+104    	; 0x1fc <__vector_13+0xb6>
			timers[i].counter++;
 194:	fe 01       	movw	r30, r28
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31
 19a:	ee 0f       	add	r30, r30
 19c:	ff 1f       	adc	r31, r31
 19e:	ee 0f       	add	r30, r30
 1a0:	ff 1f       	adc	r31, r31
 1a2:	e0 50       	subi	r30, 0x00	; 0
 1a4:	ff 4f       	sbci	r31, 0xFF	; 255
 1a6:	85 81       	ldd	r24, Z+5	; 0x05
 1a8:	96 81       	ldd	r25, Z+6	; 0x06
 1aa:	01 96       	adiw	r24, 0x01	; 1
 1ac:	96 83       	std	Z+6, r25	; 0x06
 1ae:	85 83       	std	Z+5, r24	; 0x05
			if(timers[i].counter > timers[i].duration){
 1b0:	25 81       	ldd	r18, Z+5	; 0x05
 1b2:	36 81       	ldd	r19, Z+6	; 0x06
 1b4:	80 81       	ld	r24, Z
 1b6:	91 81       	ldd	r25, Z+1	; 0x01
 1b8:	82 17       	cp	r24, r18
 1ba:	93 07       	cpc	r25, r19
 1bc:	f8 f4       	brcc	.+62     	; 0x1fc <__vector_13+0xb6>
				cli();
 1be:	f8 94       	cli
				timers[i].counter = 0;
 1c0:	fe 01       	movw	r30, r28
 1c2:	ee 0f       	add	r30, r30
 1c4:	ff 1f       	adc	r31, r31
 1c6:	ee 0f       	add	r30, r30
 1c8:	ff 1f       	adc	r31, r31
 1ca:	ee 0f       	add	r30, r30
 1cc:	ff 1f       	adc	r31, r31
 1ce:	e0 50       	subi	r30, 0x00	; 0
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	16 82       	std	Z+6, r1	; 0x06
 1d4:	15 82       	std	Z+5, r1	; 0x05
				timers[i].running = 0;
 1d6:	17 82       	std	Z+7, r1	; 0x07
				if (timers[i].callback!=NULL){
 1d8:	82 81       	ldd	r24, Z+2	; 0x02
 1da:	93 81       	ldd	r25, Z+3	; 0x03
 1dc:	89 2b       	or	r24, r25
 1de:	71 f0       	breq	.+28     	; 0x1fc <__vector_13+0xb6>
					sei();
 1e0:	78 94       	sei
					timers[i].callback();
 1e2:	fe 01       	movw	r30, r28
 1e4:	ee 0f       	add	r30, r30
 1e6:	ff 1f       	adc	r31, r31
 1e8:	ee 0f       	add	r30, r30
 1ea:	ff 1f       	adc	r31, r31
 1ec:	ee 0f       	add	r30, r30
 1ee:	ff 1f       	adc	r31, r31
 1f0:	e0 50       	subi	r30, 0x00	; 0
 1f2:	ff 4f       	sbci	r31, 0xFF	; 255
 1f4:	02 80       	ldd	r0, Z+2	; 0x02
 1f6:	f3 81       	ldd	r31, Z+3	; 0x03
 1f8:	e0 2d       	mov	r30, r0
 1fa:	09 95       	icall
	return timers[t_n].running;
}

ISR(TIMER1_OVF_vect){
	TCNT1 = 65285;
	for(int i = 0; i < 5; i++){
 1fc:	21 96       	adiw	r28, 0x01	; 1
 1fe:	c5 30       	cpi	r28, 0x05	; 5
 200:	d1 05       	cpc	r29, r1
 202:	09 f0       	breq	.+2      	; 0x206 <__vector_13+0xc0>
 204:	bb cf       	rjmp	.-138    	; 0x17c <__vector_13+0x36>
					timers[i].callback();
				}
			} 
		}
	}
}
 206:	ff 91       	pop	r31
 208:	ef 91       	pop	r30
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	bf 91       	pop	r27
 210:	af 91       	pop	r26
 212:	9f 91       	pop	r25
 214:	8f 91       	pop	r24
 216:	7f 91       	pop	r23
 218:	6f 91       	pop	r22
 21a:	5f 91       	pop	r21
 21c:	4f 91       	pop	r20
 21e:	3f 91       	pop	r19
 220:	2f 91       	pop	r18
 222:	0f 90       	pop	r0
 224:	0f be       	out	0x3f, r0	; 63
 226:	0f 90       	pop	r0
 228:	1f 90       	pop	r1
 22a:	18 95       	reti

0000022c <main>:
	startTimer(1);
}

int main(void)
{
	PORTD |= (1<<PORTD0)|(1<<PORTD1)|(1<<PORTD2)|(1<<PORTD5);
 22c:	8b b1       	in	r24, 0x0b	; 11
 22e:	87 62       	ori	r24, 0x27	; 39
 230:	8b b9       	out	0x0b, r24	; 11
	PORTC |= 0x03;
 232:	88 b1       	in	r24, 0x08	; 8
 234:	83 60       	ori	r24, 0x03	; 3
 236:	88 b9       	out	0x08, r24	; 8
	helper = PORTB;
 238:	85 b1       	in	r24, 0x05	; 5
 23a:	80 93 28 01 	sts	0x0128, r24
	PORTB |= 0x0F;
 23e:	85 b1       	in	r24, 0x05	; 5
 240:	8f 60       	ori	r24, 0x0F	; 15
 242:	85 b9       	out	0x05, r24	; 5
	DDRC = 0x02;	
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	87 b9       	out	0x07, r24	; 7
	DDRB = 0x0F;
 248:	8f e0       	ldi	r24, 0x0F	; 15
 24a:	84 b9       	out	0x04, r24	; 4
	TCNT1 = 65285;
 24c:	85 e0       	ldi	r24, 0x05	; 5
 24e:	9f ef       	ldi	r25, 0xFF	; 255
 250:	90 93 85 00 	sts	0x0085, r25
 254:	80 93 84 00 	sts	0x0084, r24
	TCCR1B &= ~((1<<CS12)|(1<<CS11)|(1<<CS10));
 258:	e1 e8       	ldi	r30, 0x81	; 129
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	88 7f       	andi	r24, 0xF8	; 248
 260:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS11)|(1<<CS10);
 262:	80 81       	ld	r24, Z
 264:	83 60       	ori	r24, 0x03	; 3
 266:	80 83       	st	Z, r24
	TIMSK1 |= (1<<TOIE1);
 268:	ef e6       	ldi	r30, 0x6F	; 111
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	81 60       	ori	r24, 0x01	; 1
 270:	80 83       	st	Z, r24
	sei();
 272:	78 94       	sei
	safe = (PIND & 0x03);
 274:	89 b1       	in	r24, 0x09	; 9
 276:	83 70       	andi	r24, 0x03	; 3
 278:	80 93 2a 01 	sts	0x012A, r24
	safe |= ((PIND & 0x20) >> 3);
 27c:	89 b1       	in	r24, 0x09	; 9
 27e:	20 91 2a 01 	lds	r18, 0x012A
 282:	80 72       	andi	r24, 0x20	; 32
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	95 95       	asr	r25
 288:	87 95       	ror	r24
 28a:	95 95       	asr	r25
 28c:	87 95       	ror	r24
 28e:	95 95       	asr	r25
 290:	87 95       	ror	r24
 292:	82 2b       	or	r24, r18
 294:	80 93 2a 01 	sts	0x012A, r24
	var, var_old = safe;
 298:	80 91 2b 01 	lds	r24, 0x012B
 29c:	80 91 2a 01 	lds	r24, 0x012A
 2a0:	80 93 29 01 	sts	0x0129, r24
};

volatile struct s_timer timers[5];

void declareTimer(void (*cb)(), uint16_t d, uint8_t t_n){
	timers[t_n].duration = d;
 2a4:	88 ee       	ldi	r24, 0xE8	; 232
 2a6:	93 e0       	ldi	r25, 0x03	; 3
 2a8:	90 93 01 01 	sts	0x0101, r25
 2ac:	80 93 00 01 	sts	0x0100, r24
	timers[t_n].callback = cb;
 2b0:	8a e9       	ldi	r24, 0x9A	; 154
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	90 93 03 01 	sts	0x0103, r25
 2b8:	80 93 02 01 	sts	0x0102, r24
	timers[t_n].counter = 0;
 2bc:	10 92 06 01 	sts	0x0106, r1
 2c0:	10 92 05 01 	sts	0x0105, r1
	timers[t_n].running = 0;
 2c4:	10 92 07 01 	sts	0x0107, r1
};

volatile struct s_timer timers[5];

void declareTimer(void (*cb)(), uint16_t d, uint8_t t_n){
	timers[t_n].duration = d;
 2c8:	84 ef       	ldi	r24, 0xF4	; 244
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	90 93 09 01 	sts	0x0109, r25
 2d0:	80 93 08 01 	sts	0x0108, r24
	timers[t_n].callback = cb;
 2d4:	88 e4       	ldi	r24, 0x48	; 72
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	90 93 0b 01 	sts	0x010B, r25
 2dc:	80 93 0a 01 	sts	0x010A, r24
	timers[t_n].counter = 0;
 2e0:	10 92 0e 01 	sts	0x010E, r1
 2e4:	10 92 0d 01 	sts	0x010D, r1
	timers[t_n].running = 0;
 2e8:	ef e0       	ldi	r30, 0x0F	; 15
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	10 82       	st	Z, r1
}

void startTimer(uint8_t t_n){
	timers[t_n].running = 1;
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	80 83       	st	Z, r24
 2f2:	ff cf       	rjmp	.-2      	; 0x2f2 <main+0xc6>

000002f4 <_exit>:
 2f4:	f8 94       	cli

000002f6 <__stop_program>:
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <__stop_program>
