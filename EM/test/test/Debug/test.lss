
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000116  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000146  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000b9  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000069  00000000  00000000  0000021f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000bb  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000344  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000010a  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000006b  00000000  00000000  00000472  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000040  00000000  00000000  000004dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 5f 00 	jmp	0xbe	; 0xbe <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:



int main(void)
{
	DDRB = 0x0F;
  80:	8f e0       	ldi	r24, 0x0F	; 15
  82:	84 b9       	out	0x04, r24	; 4
	PORTB ^= 0x07;
  84:	95 b1       	in	r25, 0x05	; 5
  86:	87 e0       	ldi	r24, 0x07	; 7
  88:	89 27       	eor	r24, r25
  8a:	85 b9       	out	0x05, r24	; 5
    while(1)
    {
        for(uint16_t i = 0; i<65000; i++){
  8c:	20 e0       	ldi	r18, 0x00	; 0
  8e:	30 e0       	ldi	r19, 0x00	; 0
#include <stdint.h>



int main(void)
{
  90:	78 ee       	ldi	r23, 0xE8	; 232
  92:	6d ef       	ldi	r22, 0xFD	; 253
	PORTB ^= 0x07;
    while(1)
    {
        for(uint16_t i = 0; i<65000; i++){
			for(uint16_t j = 0; j<65000; j++){
				PORTB ^= 0x07;
  94:	57 e0       	ldi	r21, 0x07	; 7
{
	DDRB = 0x0F;
	PORTB ^= 0x07;
    while(1)
    {
        for(uint16_t i = 0; i<65000; i++){
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	e0 e0       	ldi	r30, 0x00	; 0
  9a:	0e c0       	rjmp	.+28     	; 0xb8 <main+0x38>
			for(uint16_t j = 0; j<65000; j++){
				PORTB ^= 0x07;
  9c:	45 b1       	in	r20, 0x05	; 5
  9e:	45 27       	eor	r20, r21
  a0:	45 b9       	out	0x05, r20	; 5
  a2:	01 97       	sbiw	r24, 0x01	; 1
	DDRB = 0x0F;
	PORTB ^= 0x07;
    while(1)
    {
        for(uint16_t i = 0; i<65000; i++){
			for(uint16_t j = 0; j<65000; j++){
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	d1 f7       	brne	.-12     	; 0x9c <main+0x1c>
{
	DDRB = 0x0F;
	PORTB ^= 0x07;
    while(1)
    {
        for(uint16_t i = 0; i<65000; i++){
  a8:	2f 5f       	subi	r18, 0xFF	; 255
  aa:	3f 4f       	sbci	r19, 0xFF	; 255
  ac:	28 3e       	cpi	r18, 0xE8	; 232
  ae:	8d ef       	ldi	r24, 0xFD	; 253
  b0:	38 07       	cpc	r19, r24
  b2:	10 f0       	brcs	.+4      	; 0xb8 <main+0x38>
  b4:	2f 2f       	mov	r18, r31
  b6:	3e 2f       	mov	r19, r30
#include <stdint.h>



int main(void)
{
  b8:	87 2f       	mov	r24, r23
  ba:	96 2f       	mov	r25, r22
  bc:	ef cf       	rjmp	.-34     	; 0x9c <main+0x1c>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>
